@using Probe.Models;

@{
   
    //Layout = "~/Views/Shared/_SiteLayout.cshtml";
    //get phases data
    string ProjectId = ViewBag.CurrProjId; //Session["CurrProjectId"].ToString();
    bool hasEdit = (bool) ViewBag.HasEdit;
    var usr = (ProbeUser)Session["CurrProbeUser"];
    
    var db = Database.Open("probedb");
    var projectrange = db.Query(@"select MIN(p.ProjectId) as lowest, MAX(p.ProjectId) as highest from Projects p");

    var lowest = projectrange.FirstOrDefault().lowest;
    var highest = projectrange.FirstOrDefault().highest;


    var projectPctTot = db.Query(@"select pct_complete from Projects where ProjectId=" + ProjectId);

    var totpct = projectPctTot.FirstOrDefault().pct_complete;

    var projectData = db.Query(@"select
                                        p.ProjectId,
	                                         p.ProjectName,
		                                        p.ProposedStart,
		                                        p.ProposedEnd,
		                                        p.ProjectedStart,
		                                        p.ProjectedEnd,
		                                        p.ActualStart,
		                                        p.ActualEnd,
                                                p.ApprovalStatus
		                                        from Projects p
		                                        where p.ProjectId=" + ProjectId);

                                                                      
    var projName = ViewBag.ProjectName;                           
    var actStart = projectData.FirstOrDefault().ActualStart;    
    var actEnd = projectData.FirstOrDefault().ActualEnd;    
    var projStart = projectData.FirstOrDefault().ProjectedStart;
    var projEnd = projectData.FirstOrDefault().ProjectedEnd;
    var propStart = projectData.FirstOrDefault().ProposedStart;
    var propEnd = projectData.FirstOrDefault().ProposedEnd;


    var approvalstatus = projectData.FirstOrDefault().ApprovalStatus;
    var schedStart = projectData.FirstOrDefault().ProposedStart;
    var schedEnd = projectData.FirstOrDefault().ProposedEnd;

    ResourcesData rdata = new ResourcesData();
    schedStart = rdata.getProjectStart(int.Parse(ProjectId));
    schedEnd = rdata.getProjectEnd(int.Parse(ProjectId));
    
    //,isnull((select ph.Color from Phases ph where ph.PhaseId = p.PhaseId),'green') as Color

    var phaseData = db.Query(@"SELECT (select ph.PhaseName from Phases ph where ph.PhaseId = p.PhaseId) as PhaseName
                                          ,(select ph.Color from Phases ph where ph.PhaseId = p.PhaseId) as color
                                          ,(select ph.weeks_duration from Phases ph where ph.PhaseId = p.PhaseId) as duration
                                          ,[StartDate]
                                          ,[EndDate]
                                          ,[pct_complete]
                                          ,[IsCurrent]
                                      FROM [dbo].[ProjectPhases] p
                                      where ProjectId =" + ProjectId);

    var zoomfactor = 20;
    var timespan = 30;

    if (Request["zoom"] != null)
    {
        zoomfactor = int.Parse(Request["zoom"]);

    }
    if (Request["timespan"] != null)
    {
        timespan = int.Parse(Request["timespan"]);

    }
}
<html>
<head>
    <title>Schedule Details</title>
    <link href="~/Content/themes/base/all.css?rfrsh=true" rel="stylesheet" type="text/css" />

    @*<link href="~/Content/themes/cupertino/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css">*@

    <link href="~/Content/Site.css?rfrsh=true" rel="stylesheet" type="text/css" />
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <script src="~/Scripts/jquery-2.1.3.js"></script>
    <script src="~/Scripts/jquery-ui-1.11.2.js"></script>

    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/ProbeScripts/probe.js?rfrsh=true"></script>
    <script src="~/Scripts/ProbeScripts/Schedules.js?rfrsh=true"></script>
    <meta name="viewport" content="width=device-width" />
    <style>
        .schedDateInput
        {            
            width:75px;        
            border:none;
            font-weight:bold;    
            color:blue;
        }
         .dpicker
        {            
            max-width:75px;            
        }
         td{
             font-weight:bold;
             padding-right:3px;
         }
    </style>
</head>
<body>
    <!--Schedule Details -->
    <form id="phaseForm" method="post">
        <input type="hidden" id="editfld" name="editfld" value="" />
        <div>

            <input id="projId" name="projId" type="hidden" value="@ProjectId" />

        </div>


        <input id="zoom" name="zoom" type="hidden" value="@zoomfactor" />


        <h2>Project Schedule</h2><h3>@projName</h3>

        <br />
        <table class="tblScheds" cellpadding="3" style="text-align:left;">
            <tr>
                <td>Proposed Start:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(propStart != null?(propStart.Year<2000?"":propStart.ToShortDateString()):"")" /></td>
                <td>Proposed End:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(propEnd!=null?(propEnd.Year<2000?"":propEnd.ToShortDateString()):"")" /></td>
            </tr>
            @if (approvalstatus == "Approved") { 
            <tr>
                <td>Projected Start:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(projStart!=null?(projStart.Year<2000?"":projStart.ToShortDateString()):"")" /></td>
                <td>Projected End:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(projEnd!=null?(projEnd.Year<2000?"":projEnd.ToShortDateString()):"")" /></td>
            </tr>
            <tr>
                <td>Actual Start:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(actStart!=null?(actStart.Year<2000?"":actStart.ToShortDateString()):"")" /></td>
                <td>Actual End:</td>
                <td><input style="width: 75px; border: none; font-weight: bold; color: blue;" type="text" disabled value="@(actEnd!=null?(actEnd.Year<2000?"":actEnd.ToShortDateString()):"")" /></td>
            </tr>
            }
        </table>

        <br />

        <a onclick="setZoom('add');"><img src="~/Images/zoom_in.png" alt="zoom in" /></a>
        <a onclick="setZoom('minus');"><img src="~/Images/zoom_out.png" alt="zoom out" /></a>
        <span style="margin-left:25px;">Each cell span is equal to :</span>
        <input type="hidden" id="timespan" value="@timespan" />
        <input name="timespan_rdo" type="radio" value="7"  onclick="setTimespan(this.value);" />1 Week
        <input name="timespan_rdo" type="radio" value="14" onclick="setTimespan(this.value);" />2 Weeks
        <input name="timespan_rdo" type="radio" value="21" onclick="setTimespan(this.value);" />3 Weeks
        <input name="timespan_rdo" type="radio" value="30" checked onclick="setTimespan(this.value);" />1 Month
        @*<select style="margin-left:25px;" id="timespan" name="timespan" onchange="DrawGraph(parseInt(document.getElementById('zoom').value), parseInt(document.getElementById('timespan').value));">
            @{
                for (int i = 1; i < 31; i++)
                {
                    string selval = "";
                    if (i == timespan)
                    {
                        selval = "selected";
                    }
                    <option value="@i" @selval>@i</option>
                }
            }
        </select>
        Days*@

        <br />

        <div id="graphContainer" style="height:610px;width:1250px;overflow:auto">
            <canvas id="phasesGraph" width="800" height="600" style="border:1px solid lightgray"></canvas>
        </div>
        <div>
            <table class="tblScheds">
                <tr>
                    <th>Phases</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>@(approvalstatus == "Proposed"?Html.Raw("&nbsp;"):Html.Raw("% Completed"))</th>
                    @if(approvalstatus == "Proposed")
                    {
                        <th>Defaut Estimated Schedule <br/>Based On a 52-Week Project Plan</th>
                    }
                </tr>
                @{
                    foreach (var phs in phaseData)
                    {
                        string startid = phs.PhaseName + "Start";
                        string endid = phs.PhaseName + "End";
                        string pctid = phs.PhaseName + "Pct";
                        string pctidlbl = phs.PhaseName + "PVal";

                        string phsStart = (phs.StartDate == null?"":phs.StartDate.ToShortDateString());
                        string phsEnd = (phs.EndDate == null ? "" : phs.EndDate.ToShortDateString());
                        

                        <tr>
                            <td>@phs.PhaseName</td>
                            <td><input class="dpicker" id="@startid" name="@startid" type="text" value="@phsStart" @((!hasEdit?"disabled":"")) /></td>
                            <td><input class="dpicker" id="@endid" name="@endid" type="text" value="@phsEnd" @((!hasEdit ? "disabled" : "")) /></td>
                            @if(approvalstatus != "Proposed")
                            {
                                <td><input id="@pctid" name="@pctid" type="range" min="0" max="100" value="@phs.pct_complete" @((!hasEdit ? "disabled" : "")) onchange="outputUpdate('#@pctidlbl',value);" onblur="document.getElementById('editfld').value = this.id; doPhaseUpdate();" /><output for="@pctid" id="@pctidlbl">@phs.pct_complete%</output></td>
                            }
                            else
                            {
                                <td>&nbsp;</td>
                            }
                            @if(approvalstatus == "Proposed")
                            {
                                <td style="text-align:center;">@phs.duration Weeks</td>
                            }
                        </tr>
                    }
                }
                <tr>
                    <td colspan="4">&nbsp;</td>
                </tr>
                @if(approvalstatus != "Proposed")
                { 
                    <tr>
                        <td colspan="2">Current Phase</td>
                        <td colspan="2">
                            <select id="CurrentPhase" name="CurrentPhase" @((!hasEdit ? "disabled" : "")) onchange="document.getElementById('editfld').value='CurrentPhase';doPhaseUpdate();">
                                @{
                                    foreach (var phs in phaseData)
                                    {
                                        <option value="@phs.PhaseName" @(phs.IsCurrent ? "selected" : "")>@phs.PhaseName</option>
                                    }
                                }
                            </select>
                        </td>
                        <td>

                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            Total Percent Complete
                        </td>
                        <td colspan="2"><input id="TotPctComplete" name="TotPctComplete" @((!hasEdit ? "disabled" : "")) name="TotPctComplete" type="range" min="0" max="100" value="@totpct" onchange="outputUpdate('#TotPctCompleteLbl',value);" onblur="document.getElementById('editfld').value = this.id; doPhaseUpdate();" /><output for="TotPctComplete" id="TotPctCompleteLbl">@totpct%</output></td>
                    </tr>
                }
            </table>
        </div>

    </form>



    <script type="text/javascript">




    phaseData = {

        @{
                foreach (var phs in phaseData)
                {
                    string objitem = phs.PhaseName + ":{ start:'" +  (phs.StartDate == null?"":phs.StartDate.ToShortDateString()) + "' , end:'" + (phs.EndDate == null?"":phs.EndDate.ToShortDateString()) + "',color:'" + phs.color + "'}," ;
                    //sample output
                    //Initiation: { start: '1/1/2015', end: '3/28/2015', color: 'green'},
                    @Html.Raw(objitem);
                }
             }
    };

        schedDtStart = new Date('@schedStart');
        schedDtEnd = new Date('@schedEnd');

        DrawGraph(@zoomfactor,@timespan);


        //if (!Modernizr.inputtypes['date']) {
        //    $('input[type=date]').datepicker({
        //        // Consistent format with the HTML5 picker
        //        dateFormat: 'yy-mm-dd'
        //    });   
        //}​
        $("#loaderImg").css("display", "none");

    </script>

</body>
</html>